{"remainingRequest":"/home/d/github/box-im/im-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/d/github/box-im/im-web/src/components/rtc/RtcPrivateVideo.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/d/github/box-im/im-web/src/components/rtc/RtcPrivateVideo.vue","mtime":1727013808920},{"path":"/home/d/github/box-im/im-web/node_modules/cache-loader/dist/cjs.js","mtime":1727014166207},{"path":"/home/d/github/box-im/im-web/node_modules/babel-loader/lib/index.js","mtime":1727014166227},{"path":"/home/d/github/box-im/im-web/node_modules/cache-loader/dist/cjs.js","mtime":1727014166207},{"path":"/home/d/github/box-im/im-web/node_modules/vue-loader/lib/index.js","mtime":1727014163811}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["RtcPrivateVideo.vue"],"names":[],"mappings":";AAofile":"RtcPrivateVideo.vue","sourceRoot":"src/components/rtc","sourcesContent":["<template>\n\t<div>\n\t\t<el-dialog v-dialogDrag :title=\"title\" top=\"5vh\" :close-on-click-modal=\"false\" :close-on-press-escape=\"false\"\n\t\t\t:visible.sync=\"showRoom\" width=\"50%\" height=\"70%\" :before-close=\"onQuit\">\n\t\t\t<div class=\"rtc-private-video\">\n\t\t\t\t<div v-show=\"isVideo\" class=\"rtc-video-box\">\n\t\t\t\t\t<div class=\"rtc-video-friend\" v-loading=\"!isChating\"  element-loading-text=\"等待对方接听...\"\n\t\t\t\t\t\telement-loading-background=\"rgba(0, 0, 0, 0.3)\" >\n\t\t\t\t\t\t<head-image class=\"friend-head-image\" :id=\"friend.id\" :size=\"80\" :name=\"friend.nickName\"\n\t\t\t\t\t\t\t:url=\"friend.headImage\">\n\t\t\t\t\t\t</head-image>\n\t\t\t\t\t\t<video ref=\"remoteVideo\" autoplay=\"\"></video>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"rtc-video-mine\">\n\t\t\t\t\t\t<video ref=\"localVideo\" autoplay=\"\"></video>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div v-show=\"!isVideo\" class=\"rtc-voice-box\" v-loading=\"!isChating\" element-loading-text=\"等待对方接听...\"\n\t\t\t\t\telement-loading-background=\"rgba(0, 0, 0, 0.3)\">\n\t\t\t\t\t<head-image class=\"friend-head-image\" :id=\"friend.id\" :size=\"200\" :name=\"friend.nickName\"\n\t\t\t\t\t\t:url=\"friend.headImage\">\n\t\t\t\t\t\t<div class=\"rtc-voice-name\">{{friend.nickName}}</div>\n\t\t\t\t\t</head-image>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"rtc-control-bar\">\n\t\t\t\t\t<div title=\"取消\" class=\"icon iconfont icon-phone-reject reject\"\n\t\t\t\t\t\tstyle=\"color: red;\" @click=\"onQuit()\"></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</el-dialog>\n\t\t<rtc-private-acceptor v-if=\"!isHost&&isWaiting\" ref=\"acceptor\" :friend=\"friend\" :mode=\"mode\" @accept=\"onAccept\"\n\t\t\t@reject=\"onReject\"></rtc-private-acceptor>\n\t</div>\n</template>\n\n<script>\n\timport HeadImage from '../common/HeadImage.vue';\n\timport RtcPrivateAcceptor from './RtcPrivateAcceptor.vue';\n\timport ImWebRtc from '@/api/webrtc';\n\timport ImCamera from '@/api/camera';\n\timport RtcPrivateApi from '@/api/rtcPrivateApi'\n\n\texport default {\n\t\tname: 'rtcPrivateVideo',\n\t\tcomponents: {\n\t\t\tHeadImage,\n\t\t\tRtcPrivateAcceptor\n\t\t},\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tcamera: new ImCamera(), // 摄像头和麦克风\n\t\t\t\twebrtc: new ImWebRtc(), // webrtc相关\n\t\t\t\tAPI: new RtcPrivateApi(), // API\n\t\t\t\taudio: new Audio(), // 呼叫音频\n\t\t\t\tshowRoom: false,\n\t\t\t\tfriend: {},\n\t\t\t\tisHost: false, // 是否发起人\n\t\t\t\tstate: \"CLOSE\", // CLOSE:关闭  WAITING:等待呼叫或接听 CHATING:聊天中  ERROR:出现异常\n\t\t\t\tmode: 'video', // 模式 video:视频聊 voice:语音聊天\n\t\t\t\tlocalStream: null, // 本地视频流\n\t\t\t\tremoteStream: null, // 对方视频流\n\t\t\t\tvideoTime: 0,\n\t\t\t\tvideoTimer: null,\n\t\t\t\theartbeatTimer: null,\n\t\t\t\tcandidates: [],\n\t\t\t}\n\t\t},\n\t\tmethods: {\n\t\t\topen(rtcInfo) {\n\t\t\t\tthis.showRoom = true;\n\t\t\t\tthis.mode = rtcInfo.mode;\n\t\t\t\tthis.isHost = rtcInfo.isHost;\n\t\t\t\tthis.friend = rtcInfo.friend;\n\t\t\t\tif (this.isHost) {\n\t\t\t\t\tthis.onCall();\n\t\t\t\t}\n\t\t\t},\n\t\t\tinitAudio() {\n\t\t\t\tlet url = require(`@/assets/audio/call.wav`);\n\t\t\t\tthis.audio.src = url;\n\t\t\t\tthis.audio.loop = true;\n\t\t\t},\n\t\t\tinitRtc() {\n\t\t\t\tthis.webrtc.init(this.configuration)\n\t\t\t\tthis.webrtc.setupPeerConnection((stream) => {\n\t\t\t\t\tthis.$refs.remoteVideo.srcObject = stream;\n\t\t\t\t\tthis.remoteStream = stream;\n\t\t\t\t})\n\t\t\t\t// 监听候选信息\n\t\t\t\tthis.webrtc.onIcecandidate((candidate) => {\n\t\t\t\t\tif (this.state == \"CHATING\") {\n\t\t\t\t\t\t// 连接已就绪,直接发送\n\t\t\t\t\t\tthis.API.sendCandidate(this.friend.id, candidate);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// 连接未就绪,缓存起来，连接后再发送\n\t\t\t\t\t\tthis.candidates.push(candidate)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t// 监听连接成功状态\n\t\t\t\tthis.webrtc.onStateChange((state) => {\n\t\t\t\t\tif (state == \"connected\") {\n\t\t\t\t\t\tconsole.log(\"webrtc连接成功\")\n\t\t\t\t\t} else if (state == \"disconnected\") {\n\t\t\t\t\t\tconsole.log(\"webrtc连接断开\")\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\t\t\tonCall() {\n\t\t\t\tif (!this.checkDevEnable()) {\n\t\t\t\t\tthis.close();\n\t\t\t\t}\n\t\t\t\t// 初始化webrtc\n\t\t\t\tthis.initRtc();\n\t\t\t\t// 启动心跳\n\t\t\t\tthis.startHeartBeat();\n\t\t\t\t// 打开摄像头\n\t\t\t\tthis.openStream().then(() => {\n\t\t\t\t\tthis.webrtc.setStream(this.localStream);\n\t\t\t\t\tthis.webrtc.createOffer().then((offer) => {\n\t\t\t\t\t\t// 发起呼叫\n\t\t\t\t\t\tthis.API.call(this.friend.id, this.mode, offer).then(() => {\n\t\t\t\t\t\t\t// 直接进入聊天状态\n\t\t\t\t\t\t\tthis.state = \"WAITING\";\n\t\t\t\t\t\t\t// 播放呼叫铃声\n\t\t\t\t\t\t\tthis.audio.play();\n\t\t\t\t\t\t}).catch(()=>{\n\t\t\t\t\t\t\tthis.close();\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t}).catch(()=>{\n\t\t\t\t\t// 呼叫方必须能打开摄像头，否则无法正常建立连接\n\t\t\t\t\tthis.close();\n\t\t\t\t})\n\t\t\t},\n\t\t\tonAccept() {\n\t\t\t\tif (!this.checkDevEnable()) {\n\t\t\t\t\tthis.API.failed(this.friend.id, \"对方设备不支持通话\")\n\t\t\t\t\tthis.close();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// 进入房间\n\t\t\t\tthis.showRoom = true;\n\t\t\t\tthis.state = \"CHATING\";\n\t\t\t\t// 停止呼叫铃声\n\t\t\t\tthis.audio.pause();\n\t\t\t\t// 初始化webrtc\n\t\t\t\tthis.initRtc();\n\t\t\t\t// 打开摄像头\n\t\t\t\tthis.openStream().finally(() => {\n\t\t\t\t\tthis.webrtc.setStream(this.localStream);\n\t\t\t\t\tthis.webrtc.createAnswer(this.offer).then((answer) => {\n\t\t\t\t\t\tthis.API.accept(this.friend.id, answer);\n\t\t\t\t\t\t// 记录时长\n\t\t\t\t\t\tthis.startChatTime();\n\t\t\t\t\t\t// 清理定时器\n\t\t\t\t\t\tthis.waitTimer && clearTimeout(this.waitTimer);\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t},\n\t\t\tonReject() {\n\t\t\t\tconsole.log(\"onReject\")\n\t\t\t\t// 退出通话\n\t\t\t\tthis.API.reject(this.friend.id);\n\t\t\t\t// 退出\n\t\t\t\tthis.close();\n\t\t\t},\n\t\t\tonHandup() {\n\t\t\t\tthis.API.handup(this.friend.id)\n\t\t\t\tthis.$message.success(\"您已挂断,通话结束\")\n\t\t\t\tthis.close();\n\t\t\t},\n\t\t\tonCancel() {\n\t\t\t\tthis.API.cancel(this.friend.id)\n\t\t\t\tthis.$message.success(\"已取消呼叫,通话结束\")\n\t\t\t\tthis.close();\n\t\t\t},\n\t\t\tonRTCMessage(msg) {\n\t\t\t\t// 除了发起通话，如果在关闭状态就无需处理\n\t\t\t\tif (msg.type != this.$enums.MESSAGE_TYPE.RTC_CALL_VOICE &&\n\t\t\t\t\tmsg.type != this.$enums.MESSAGE_TYPE.RTC_CALL_VIDEO &&\n\t\t\t\t\tthis.isClose) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// RTC信令处理\n\t\t\t\tswitch (msg.type) {\n\t\t\t\t\tcase this.$enums.MESSAGE_TYPE.RTC_CALL_VOICE:\n\t\t\t\t\t\tthis.onRTCCall(msg, 'voice')\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase this.$enums.MESSAGE_TYPE.RTC_CALL_VIDEO:\n\t\t\t\t\t\tthis.onRTCCall(msg, 'video')\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase this.$enums.MESSAGE_TYPE.RTC_ACCEPT:\n\t\t\t\t\t\tthis.onRTCAccept(msg)\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase this.$enums.MESSAGE_TYPE.RTC_REJECT:\n\t\t\t\t\t\tthis.onRTCReject(msg)\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase this.$enums.MESSAGE_TYPE.RTC_CANCEL:\n\t\t\t\t\t\tthis.onRTCCancel(msg)\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase this.$enums.MESSAGE_TYPE.RTC_FAILED:\n\t\t\t\t\t\tthis.onRTCFailed(msg)\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase this.$enums.MESSAGE_TYPE.RTC_HANDUP:\n\t\t\t\t\t\tthis.onRTCHandup(msg)\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase this.$enums.MESSAGE_TYPE.RTC_CANDIDATE:\n\t\t\t\t\t\tthis.onRTCCandidate(msg)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t},\n\t\t\tonRTCCall(msg, mode) {\n\t\t\t\tthis.offer = JSON.parse(msg.content);\n\t\t\t\tthis.isHost = false;\n\t\t\t\tthis.mode = mode;\n\t\t\t\tthis.$http({\n\t\t\t\t\turl: `/friend/find/${msg.sendId}`,\n\t\t\t\t\tmethod: 'get'\n\t\t\t\t}).then((friend) => {\n\t\t\t\t\tthis.friend = friend;\n\t\t\t\t\tthis.state = \"WAITING\";\n\t\t\t\t\tthis.audio.play();\n\t\t\t\t\tthis.startHeartBeat();\n\t\t\t\t\t// 30s未接听自动挂掉\n\t\t\t\t\tthis.waitTimer = setTimeout(() => {\n\t\t\t\t\t\tthis.API.failed(this.friend.id,\"对方无应答\");\n\t\t\t\t\t\tthis.$message.error(\"您未接听\");\n\t\t\t\t\t\tthis.close();\n\t\t\t\t\t}, 30000)\n\t\t\t\t})\n\t\t\t},\n\t\t\tonRTCAccept(msg) {\n\t\t\t\tif (msg.selfSend) {\n\t\t\t\t\t// 在其他设备接听\n\t\t\t\t\tthis.$message.success(\"已在其他设备接听\");\n\t\t\t\t\tthis.close();\n\t\t\t\t} else {\n\t\t\t\t\t// 对方接受了的通话\n\t\t\t\t\tlet offer = JSON.parse(msg.content);\n\t\t\t\t\tthis.webrtc.setRemoteDescription(offer);\n\t\t\t\t\t// 状态为聊天中\n\t\t\t\t\tthis.state = 'CHATING'\n\t\t\t\t\t// 停止播放语音\n\t\t\t\t\tthis.audio.pause();\n\t\t\t\t\t// 发送candidate\n\t\t\t\t\tthis.candidates.forEach((candidate) => {\n\t\t\t\t\t\tthis.API.sendCandidate(this.friend.id, candidate);\n\t\t\t\t\t})\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t},\n\t\t\tonRTCReject(msg) {\n\t\t\t\tif (msg.selfSend) {\n\t\t\t\t\tthis.$message.success(\"已在其他设备拒绝\");\n\t\t\t\t\tthis.close();\n\t\t\t\t} else {\n\t\t\t\t\tthis.$message.error(\"对方拒绝了您的通话请求\");\n\t\t\t\t\tthis.close();\n\t\t\t\t}\n\t\t\t},\n\t\t\tonRTCFailed(msg) {\n\t\t\t\t// 呼叫失败\n\t\t\t\tthis.$message.error(msg.content)\n\t\t\t\tthis.close();\n\t\t\t},\n\t\t\tonRTCCancel() {\n\t\t\t\t// 对方取消通话\n\t\t\t\tthis.$message.success(\"对方取消了呼叫\");\n\t\t\t\tthis.close();\n\t\t\t},\n\t\t\tonRTCHandup() {\n\t\t\t\t// 对方挂断\n\t\t\t\tthis.$message.success(\"对方已挂断\");\n\t\t\t\tthis.close();\n\t\t\t},\n\t\t\tonRTCCandidate(msg) {\n\t\t\t\tlet candidate = JSON.parse(msg.content);\n\t\t\t\tthis.webrtc.addIceCandidate(candidate);\n\t\t\t},\n\n\t\t\topenStream() {\n\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\tif (this.isVideo) {\n\t\t\t\t\t\t// 打开摄像头+麦克风\n\t\t\t\t\t\tthis.camera.openVideo().then((stream) => {\n\t\t\t\t\t\t\tthis.localStream = stream;\n\t\t\t\t\t\t\tthis.$nextTick(() => {\n\t\t\t\t\t\t\t\tthis.$refs.localVideo.srcObject = stream;\n\t\t\t\t\t\t\t\tthis.$refs.localVideo.muted = true;\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\tresolve(stream);\n\t\t\t\t\t\t}).catch((e) => {\n\t\t\t\t\t\t\tthis.$message.error(\"打开摄像头失败\")\n\t\t\t\t\t\t\tconsole.log(\"本摄像头打开失败:\" + e.message)\n\t\t\t\t\t\t\treject(e);\n\t\t\t\t\t\t})\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// 打开麦克风\n\t\t\t\t\t\tthis.camera.openAudio().then((stream) => {\n\t\t\t\t\t\t\tthis.localStream = stream;\n\t\t\t\t\t\t\tthis.$refs.localVideo.srcObject = stream;\n\t\t\t\t\t\t\tresolve(stream);\n\t\t\t\t\t\t}).catch((e) => {\n\t\t\t\t\t\t\tthis.$message.error(\"打开麦克风失败\")\n\t\t\t\t\t\t\tconsole.log(\"打开麦克风失败:\" + e.message)\n\t\t\t\t\t\t\treject(e);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\t\t\tstartChatTime() {\n\t\t\t\tthis.videoTime = 0;\n\t\t\t\tthis.videoTimer && clearInterval(this.videoTimer);\n\t\t\t\tthis.videoTimer = setInterval(() => {\n\t\t\t\t\tthis.videoTime++;\n\t\t\t\t}, 1000)\n\t\t\t},\n\t\t\tcheckDevEnable() {\n\t\t\t\t// 检测摄像头\n\t\t\t\tif (!this.camera.isEnable()) {\n\t\t\t\t\tthis.message.error(\"访问摄像头失败\");\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\t// 检测webrtc\n\t\t\t\tif (!this.webrtc.isEnable()) {\n\t\t\t\t\tthis.message.error(\"初始化RTC失败，原因可能是: 1.服务器缺少ssl证书 2.您的设备不支持WebRTC\");\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\tstartHeartBeat() {\n\t\t\t\t// 每15s推送一次心跳\n\t\t\t\tthis.heartbeatTimer && clearInterval(this.heartbeatTimer);\n\t\t\t\tthis.heartbeatTimer = setInterval(() => {\n\t\t\t\t\tthis.API.heartbeat(this.friend.id);\n\t\t\t\t}, 15000)\n\t\t\t},\n\t\t\tclose() {\n\t\t\t\tthis.showRoom = false;\n\t\t\t\tthis.camera.close();\n\t\t\t\tthis.webrtc.close();\n\t\t\t\tthis.audio.pause();\n\t\t\t\tthis.videoTime = 0;\n\t\t\t\tthis.videoTimer && clearInterval(this.videoTimer);\n\t\t\t\tthis.heartbeatTimer && clearInterval(this.heartbeatTimer);\n\t\t\t\tthis.waitTimer && clearTimeout(this.waitTimer);\n\t\t\t\tthis.videoTimer = null;\n\t\t\t\tthis.heartbeatTimer = null;\n\t\t\t\tthis.waitTimer = null;\n\t\t\t\tthis.state = 'CLOSE';\n\t\t\t\tthis.candidates = [];\n\t\t\t},\n\t\t\tonQuit() {\n\t\t\t\tif (this.isChating) {\n\t\t\t\t\tthis.onHandup()\n\t\t\t\t} else if (this.isWaiting) {\n\t\t\t\t\tthis.onCancel();\n\t\t\t\t} else {\n\t\t\t\t\tthis.close();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tcomputed: {\n\t\t\ttitle() {\n\t\t\t\tlet strTitle = `${this.modeText}通话-${this.friend.nickName}`;\n\t\t\t\tif (this.isChating) {\n\t\t\t\t\tstrTitle += `(${this.currentTime})`;\n\t\t\t\t} else if (this.isWaiting) {\n\t\t\t\t\tstrTitle += `(呼叫中)`;\n\t\t\t\t}\n\t\t\t\treturn strTitle;\n\t\t\t},\n\t\t\tcurrentTime() {\n\t\t\t\tlet min = Math.floor(this.videoTime / 60);\n\t\t\t\tlet sec = this.videoTime % 60;\n\t\t\t\tlet strTime = min < 10 ? \"0\" : \"\";\n\t\t\t\tstrTime += min;\n\t\t\t\tstrTime += \":\"\n\t\t\t\tstrTime += sec < 10 ? \"0\" : \"\";\n\t\t\t\tstrTime += sec;\n\t\t\t\treturn strTime;\n\t\t\t},\n\t\t\tconfiguration() {\n\t\t\t\tconst iceServers = this.$store.state.configStore.webrtc.iceServers;\n\t\t\t\treturn {\n\t\t\t\t\ticeServers: iceServers\n\t\t\t\t}\n\t\t\t},\n\t\t\tisVideo() {\n\t\t\t\treturn this.mode == \"video\"\n\t\t\t},\n\t\t\tmodeText() {\n\t\t\t\treturn this.isVideo ? \"视频\" : \"语音\";\n\t\t\t},\n\t\t\tisChating() {\n\t\t\t\treturn this.state == \"CHATING\";\n\t\t\t},\n\t\t\tisWaiting() {\n\t\t\t\treturn this.state == \"WAITING\";\n\t\t\t},\n\t\t\tisClose() {\n\t\t\t\treturn this.state == \"CLOSE\";\n\t\t\t}\n\t\t},\n\t\tmounted() {\n\t\t\t// 初始化音频文件\n\t\t\tthis.initAudio();\n\t\t},\n\t\tcreated() {\n\t\t\t// 监听页面刷新事件\n\t\t\twindow.addEventListener('beforeunload', () => {\n\t\t\t\tthis.onQuit();\n\t\t\t});\n\t\t},\n\t\tbeforeUnmount() {\n\t\t\tthis.onQuit();\n\t\t}\n\t}\n</script>\n\n<style lang=\"scss\">\n\t.rtc-private-video {\n\t\tposition: relative;\n\n\t\t.el-loading-text {\n\t\t\tcolor: white !important;\n\t\t\tfont-size: 16px !important;\n\t\t}\n\n\t\t.path {\n\t\t\tstroke: white !important;\n\t\t}\n\n\t\t.rtc-video-box {\n\t\t\tposition: relative;\n\t\t\tborder: #4880b9 solid 1px;\n\t\t\tbackground-color: #eeeeee;\n\n\t\t\t.rtc-video-friend {\n\t\t\t\theight: 70vh;\n\n\t\t\t\t.friend-head-image {\n\t\t\t\t\tposition: absolute;\n\t\t\t\t}\n\n\t\t\t\tvideo {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 100%;\n\t\t\t\t\tobject-fit: cover;\n\t\t\t\t\ttransform: rotateY(180deg);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t.rtc-video-mine {\n\t\t\t\tposition: absolute;\n\t\t\t\tz-index: 99999;\n\t\t\t\twidth: 25vh;\n\t\t\t\tright: 0;\n\t\t\t\tbottom: 0;\n\t\t\t\tbox-shadow: 0px 0px 5px #ccc;\n\t\t\t\tbackground-color: #cccccc;\n\n\t\t\t\tvideo {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\tobject-fit: cover;\n\t\t\t\t\ttransform: rotateY(180deg);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t.rtc-voice-box {\n\t\t\tposition: relative;\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: center;\n\t\t\tborder: #4880b9 solid 1px;\n\t\t\twidth: 100%;\n\t\t\theight: 50vh;\n\t\t\tpadding-top: 10vh;\n\t\t\tbackground-color: aliceblue;\n\n\t\t\t.rtc-voice-name {\n\t\t\t\ttext-align: center;\n\t\t\t\tfont-size: 22px;\n\t\t\t\tfont-weight: 600;\n\t\t\t}\n\t\t}\n\n\t\t.rtc-control-bar {\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: space-around;\n\t\t\tpadding: 10px;\n\n\t\t\t.icon {\n\t\t\t\tfont-size: 50px;\n\t\t\t\tcursor: pointer;\n\t\t\t}\n\t\t}\n\t}\n</style>"]}]}